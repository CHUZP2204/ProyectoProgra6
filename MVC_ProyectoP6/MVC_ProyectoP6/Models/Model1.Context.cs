//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_ProyectoP6.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class progra6Entities3 : DbContext
    {
        public progra6Entities3()
            : base("name=progra6Entities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Canton> Canton { get; set; }
        public DbSet<DetalleFactura> DetalleFactura { get; set; }
        public DbSet<Distrito> Distrito { get; set; }
        public DbSet<EncabezadoFactura> EncabezadoFactura { get; set; }
        public DbSet<MarcaVehiculos> MarcaVehiculos { get; set; }
        public DbSet<PaisFabricante> PaisFabricante { get; set; }
        public DbSet<Provincia> Provincia { get; set; }
        public DbSet<ServiciosOProductos> ServiciosOProductos { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<TipoVehiculos> TipoVehiculos { get; set; }
        public DbSet<Vehiculos> Vehiculos { get; set; }
        public DbSet<VehiculosXCliente> VehiculosXCliente { get; set; }
        public DbSet<Clientes> Clientes { get; set; }
    
        public virtual int sp_Elimina_VehXPers(Nullable<int> idVehxPer)
        {
            var idVehxPerParameter = idVehxPer.HasValue ?
                new ObjectParameter("idVehxPer", idVehxPer) :
                new ObjectParameter("idVehxPer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Elimina_VehXPers", idVehxPerParameter);
        }
    
        public virtual int sp_EliminaCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaCliente", idClienteParameter);
        }
    
        public virtual int sp_EliminaDetalleFactura(Nullable<int> idDetalleFactura)
        {
            var idDetalleFacturaParameter = idDetalleFactura.HasValue ?
                new ObjectParameter("idDetalleFactura", idDetalleFactura) :
                new ObjectParameter("idDetalleFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaDetalleFactura", idDetalleFacturaParameter);
        }
    
        public virtual int sp_EliminaMarcaVehiculos(Nullable<int> idMarcaVehiculo)
        {
            var idMarcaVehiculoParameter = idMarcaVehiculo.HasValue ?
                new ObjectParameter("idMarcaVehiculo", idMarcaVehiculo) :
                new ObjectParameter("idMarcaVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaMarcaVehiculos", idMarcaVehiculoParameter);
        }
    
        public virtual int sp_EliminaPaisFabricante(Nullable<int> idPaisFabricante)
        {
            var idPaisFabricanteParameter = idPaisFabricante.HasValue ?
                new ObjectParameter("idPaisFabricante", idPaisFabricante) :
                new ObjectParameter("idPaisFabricante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaPaisFabricante", idPaisFabricanteParameter);
        }
    
        public virtual int sp_EliminarEncFactura(Nullable<int> idEncFactura)
        {
            var idEncFacturaParameter = idEncFactura.HasValue ?
                new ObjectParameter("idEncFactura", idEncFactura) :
                new ObjectParameter("idEncFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarEncFactura", idEncFacturaParameter);
        }
    
        public virtual int sp_EliminarVehiculo(Nullable<int> idVehiculo)
        {
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarVehiculo", idVehiculoParameter);
        }
    
        public virtual int sp_EliminaServicioOProducto(Nullable<int> idSOP)
        {
            var idSOPParameter = idSOP.HasValue ?
                new ObjectParameter("idSOP", idSOP) :
                new ObjectParameter("idSOP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaServicioOProducto", idSOPParameter);
        }
    
        public virtual int sp_EliminaTipoVehiculos(Nullable<int> idTipoVehiculo)
        {
            var idTipoVehiculoParameter = idTipoVehiculo.HasValue ?
                new ObjectParameter("idTipoVehiculo", idTipoVehiculo) :
                new ObjectParameter("idTipoVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminaTipoVehiculos", idTipoVehiculoParameter);
        }
    
        public virtual int sp_Inserta_VehXPers(Nullable<int> idVehiculo, Nullable<int> idCliente)
        {
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserta_VehXPers", idVehiculoParameter, idClienteParameter);
        }
    
        public virtual int sp_InsertaDetalleFactura(string tipoSOP, Nullable<int> cantidadSOP, Nullable<int> precioSOP)
        {
            var tipoSOPParameter = tipoSOP != null ?
                new ObjectParameter("TipoSOP", tipoSOP) :
                new ObjectParameter("TipoSOP", typeof(string));
    
            var cantidadSOPParameter = cantidadSOP.HasValue ?
                new ObjectParameter("CantidadSOP", cantidadSOP) :
                new ObjectParameter("CantidadSOP", typeof(int));
    
            var precioSOPParameter = precioSOP.HasValue ?
                new ObjectParameter("PrecioSOP", precioSOP) :
                new ObjectParameter("PrecioSOP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaDetalleFactura", tipoSOPParameter, cantidadSOPParameter, precioSOPParameter);
        }
    
        public virtual int sp_InsertaEncFactura(Nullable<int> idCliente, Nullable<int> idVehiculo, Nullable<System.DateTime> fecha, Nullable<decimal> montoTotalServicios, string estadoFactura, Nullable<int> idDetalleFac)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var montoTotalServiciosParameter = montoTotalServicios.HasValue ?
                new ObjectParameter("MontoTotalServicios", montoTotalServicios) :
                new ObjectParameter("MontoTotalServicios", typeof(decimal));
    
            var estadoFacturaParameter = estadoFactura != null ?
                new ObjectParameter("EstadoFactura", estadoFactura) :
                new ObjectParameter("EstadoFactura", typeof(string));
    
            var idDetalleFacParameter = idDetalleFac.HasValue ?
                new ObjectParameter("idDetalleFac", idDetalleFac) :
                new ObjectParameter("idDetalleFac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaEncFactura", idClienteParameter, idVehiculoParameter, fechaParameter, montoTotalServiciosParameter, estadoFacturaParameter, idDetalleFacParameter);
        }
    
        public virtual int sp_InsertaPaisFabricante(string codigoPaisFabricante, string paisFabricante)
        {
            var codigoPaisFabricanteParameter = codigoPaisFabricante != null ?
                new ObjectParameter("CodigoPaisFabricante", codigoPaisFabricante) :
                new ObjectParameter("CodigoPaisFabricante", typeof(string));
    
            var paisFabricanteParameter = paisFabricante != null ?
                new ObjectParameter("PaisFabricante", paisFabricante) :
                new ObjectParameter("PaisFabricante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaPaisFabricante", codigoPaisFabricanteParameter, paisFabricanteParameter);
        }
    
        public virtual int sp_InsertaServicioOProducto(string codigoSOP, string precioSOP, string tipoSOP, Nullable<int> idCliente)
        {
            var codigoSOPParameter = codigoSOP != null ?
                new ObjectParameter("CodigoSOP", codigoSOP) :
                new ObjectParameter("CodigoSOP", typeof(string));
    
            var precioSOPParameter = precioSOP != null ?
                new ObjectParameter("PrecioSOP", precioSOP) :
                new ObjectParameter("PrecioSOP", typeof(string));
    
            var tipoSOPParameter = tipoSOP != null ?
                new ObjectParameter("TipoSOP", tipoSOP) :
                new ObjectParameter("TipoSOP", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaServicioOProducto", codigoSOPParameter, precioSOPParameter, tipoSOPParameter, idClienteParameter);
        }
    
        public virtual int sp_InsertaTipoVehiculo(string codigoTipoVehiculo, string tipoVehiculo)
        {
            var codigoTipoVehiculoParameter = codigoTipoVehiculo != null ?
                new ObjectParameter("CodigoTipoVehiculo", codigoTipoVehiculo) :
                new ObjectParameter("CodigoTipoVehiculo", typeof(string));
    
            var tipoVehiculoParameter = tipoVehiculo != null ?
                new ObjectParameter("TipoVehiculo", tipoVehiculo) :
                new ObjectParameter("TipoVehiculo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaTipoVehiculo", codigoTipoVehiculoParameter, tipoVehiculoParameter);
        }
    
        public virtual int sp_InsertaVehiculo(string placa, Nullable<int> idTipoVeh, Nullable<int> idMarcaVeh, string puertas, string ruedas)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var idTipoVehParameter = idTipoVeh.HasValue ?
                new ObjectParameter("idTipoVeh", idTipoVeh) :
                new ObjectParameter("idTipoVeh", typeof(int));
    
            var idMarcaVehParameter = idMarcaVeh.HasValue ?
                new ObjectParameter("idMarcaVeh", idMarcaVeh) :
                new ObjectParameter("idMarcaVeh", typeof(int));
    
            var puertasParameter = puertas != null ?
                new ObjectParameter("puertas", puertas) :
                new ObjectParameter("puertas", typeof(string));
    
            var ruedasParameter = ruedas != null ?
                new ObjectParameter("ruedas", ruedas) :
                new ObjectParameter("ruedas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaVehiculo", placaParameter, idTipoVehParameter, idMarcaVehParameter, puertasParameter, ruedasParameter);
        }
    
        public virtual int sp_Modifica_VehXPers(Nullable<int> idVehxPer, Nullable<int> idVehiculo, Nullable<int> idCliente)
        {
            var idVehxPerParameter = idVehxPer.HasValue ?
                new ObjectParameter("idVehxPer", idVehxPer) :
                new ObjectParameter("idVehxPer", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modifica_VehXPers", idVehxPerParameter, idVehiculoParameter, idClienteParameter);
        }
    
        public virtual int sp_ModificaDetalleFactura(Nullable<int> idDetalleFactura, string tipoSOP, Nullable<int> cantidadSOP, Nullable<int> precioSOP)
        {
            var idDetalleFacturaParameter = idDetalleFactura.HasValue ?
                new ObjectParameter("idDetalleFactura", idDetalleFactura) :
                new ObjectParameter("idDetalleFactura", typeof(int));
    
            var tipoSOPParameter = tipoSOP != null ?
                new ObjectParameter("TipoSOP", tipoSOP) :
                new ObjectParameter("TipoSOP", typeof(string));
    
            var cantidadSOPParameter = cantidadSOP.HasValue ?
                new ObjectParameter("CantidadSOP", cantidadSOP) :
                new ObjectParameter("CantidadSOP", typeof(int));
    
            var precioSOPParameter = precioSOP.HasValue ?
                new ObjectParameter("PrecioSOP", precioSOP) :
                new ObjectParameter("PrecioSOP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaDetalleFactura", idDetalleFacturaParameter, tipoSOPParameter, cantidadSOPParameter, precioSOPParameter);
        }
    
        public virtual int sp_ModificaEncaFact(Nullable<int> idEfactura, Nullable<decimal> montoTotal, string estadoFactura)
        {
            var idEfacturaParameter = idEfactura.HasValue ?
                new ObjectParameter("idEfactura", idEfactura) :
                new ObjectParameter("idEfactura", typeof(int));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("montoTotal", montoTotal) :
                new ObjectParameter("montoTotal", typeof(decimal));
    
            var estadoFacturaParameter = estadoFactura != null ?
                new ObjectParameter("EstadoFactura", estadoFactura) :
                new ObjectParameter("EstadoFactura", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaEncaFact", idEfacturaParameter, montoTotalParameter, estadoFacturaParameter);
        }
    
        public virtual int sp_ModificaMarcaVehiculo(Nullable<int> idMarcaVehiculo, string codigoMarcaVehiculo, string tipoMarcaVehiculo, Nullable<int> idPaisFabricante)
        {
            var idMarcaVehiculoParameter = idMarcaVehiculo.HasValue ?
                new ObjectParameter("idMarcaVehiculo", idMarcaVehiculo) :
                new ObjectParameter("idMarcaVehiculo", typeof(int));
    
            var codigoMarcaVehiculoParameter = codigoMarcaVehiculo != null ?
                new ObjectParameter("CodigoMarcaVehiculo", codigoMarcaVehiculo) :
                new ObjectParameter("CodigoMarcaVehiculo", typeof(string));
    
            var tipoMarcaVehiculoParameter = tipoMarcaVehiculo != null ?
                new ObjectParameter("TipoMarcaVehiculo", tipoMarcaVehiculo) :
                new ObjectParameter("TipoMarcaVehiculo", typeof(string));
    
            var idPaisFabricanteParameter = idPaisFabricante.HasValue ?
                new ObjectParameter("idPaisFabricante", idPaisFabricante) :
                new ObjectParameter("idPaisFabricante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaMarcaVehiculo", idMarcaVehiculoParameter, codigoMarcaVehiculoParameter, tipoMarcaVehiculoParameter, idPaisFabricanteParameter);
        }
    
        public virtual int sp_ModificaPaisFabricante(Nullable<int> idPaisFabricante, string codigoPaisFabricante, string paisFabricanre)
        {
            var idPaisFabricanteParameter = idPaisFabricante.HasValue ?
                new ObjectParameter("idPaisFabricante", idPaisFabricante) :
                new ObjectParameter("idPaisFabricante", typeof(int));
    
            var codigoPaisFabricanteParameter = codigoPaisFabricante != null ?
                new ObjectParameter("CodigoPaisFabricante", codigoPaisFabricante) :
                new ObjectParameter("CodigoPaisFabricante", typeof(string));
    
            var paisFabricanreParameter = paisFabricanre != null ?
                new ObjectParameter("PaisFabricanre", paisFabricanre) :
                new ObjectParameter("PaisFabricanre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaPaisFabricante", idPaisFabricanteParameter, codigoPaisFabricanteParameter, paisFabricanreParameter);
        }
    
        public virtual int sp_ModificaServicioOProducto(Nullable<int> idSOP, string codigoSOP, string precioSOP, string tipoSOP, Nullable<int> idCliente)
        {
            var idSOPParameter = idSOP.HasValue ?
                new ObjectParameter("idSOP", idSOP) :
                new ObjectParameter("idSOP", typeof(int));
    
            var codigoSOPParameter = codigoSOP != null ?
                new ObjectParameter("CodigoSOP", codigoSOP) :
                new ObjectParameter("CodigoSOP", typeof(string));
    
            var precioSOPParameter = precioSOP != null ?
                new ObjectParameter("PrecioSOP", precioSOP) :
                new ObjectParameter("PrecioSOP", typeof(string));
    
            var tipoSOPParameter = tipoSOP != null ?
                new ObjectParameter("TipoSOP", tipoSOP) :
                new ObjectParameter("TipoSOP", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaServicioOProducto", idSOPParameter, codigoSOPParameter, precioSOPParameter, tipoSOPParameter, idClienteParameter);
        }
    
        public virtual int sp_ModificaTipoVehiculo(Nullable<int> idTipoVehiculo, string codigoTipoVehiculo, string tipoVehiculo)
        {
            var idTipoVehiculoParameter = idTipoVehiculo.HasValue ?
                new ObjectParameter("idTipoVehiculo", idTipoVehiculo) :
                new ObjectParameter("idTipoVehiculo", typeof(int));
    
            var codigoTipoVehiculoParameter = codigoTipoVehiculo != null ?
                new ObjectParameter("CodigoTipoVehiculo", codigoTipoVehiculo) :
                new ObjectParameter("CodigoTipoVehiculo", typeof(string));
    
            var tipoVehiculoParameter = tipoVehiculo != null ?
                new ObjectParameter("TipoVehiculo", tipoVehiculo) :
                new ObjectParameter("TipoVehiculo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaTipoVehiculo", idTipoVehiculoParameter, codigoTipoVehiculoParameter, tipoVehiculoParameter);
        }
    
        public virtual int sp_ModificaVehiculo(Nullable<int> idVehiculo, string placa, Nullable<int> idTipoVeh, Nullable<int> idMarcaVeh, string puertas, string ruedas)
        {
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var idTipoVehParameter = idTipoVeh.HasValue ?
                new ObjectParameter("idTipoVeh", idTipoVeh) :
                new ObjectParameter("idTipoVeh", typeof(int));
    
            var idMarcaVehParameter = idMarcaVeh.HasValue ?
                new ObjectParameter("idMarcaVeh", idMarcaVeh) :
                new ObjectParameter("idMarcaVeh", typeof(int));
    
            var puertasParameter = puertas != null ?
                new ObjectParameter("puertas", puertas) :
                new ObjectParameter("puertas", typeof(string));
    
            var ruedasParameter = ruedas != null ?
                new ObjectParameter("ruedas", ruedas) :
                new ObjectParameter("ruedas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaVehiculo", idVehiculoParameter, placaParameter, idTipoVehParameter, idMarcaVehParameter, puertasParameter, ruedasParameter);
        }
    
        public virtual ObjectResult<sp_RetornaCantones_Result> sp_RetornaCantones(string nombre, Nullable<int> id_Provincia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaCantones_Result>("sp_RetornaCantones", nombreParameter, id_ProvinciaParameter);
        }
    
        public virtual ObjectResult<sp_RetornaCantones_ID_Result> sp_RetornaCantones_ID(Nullable<int> id_Canton)
        {
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaCantones_ID_Result>("sp_RetornaCantones_ID", id_CantonParameter);
        }
    
        public virtual ObjectResult<sp_RetornaDetalleFac_Result> sp_RetornaDetalleFac(string tipoSOP)
        {
            var tipoSOPParameter = tipoSOP != null ?
                new ObjectParameter("TipoSOP", tipoSOP) :
                new ObjectParameter("TipoSOP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaDetalleFac_Result>("sp_RetornaDetalleFac", tipoSOPParameter);
        }
    
        public virtual ObjectResult<sp_RetornaDetalleFac_ID_Result> sp_RetornaDetalleFac_ID(Nullable<int> idDetalleFac)
        {
            var idDetalleFacParameter = idDetalleFac.HasValue ?
                new ObjectParameter("idDetalleFac", idDetalleFac) :
                new ObjectParameter("idDetalleFac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaDetalleFac_ID_Result>("sp_RetornaDetalleFac_ID", idDetalleFacParameter);
        }
    
        public virtual ObjectResult<sp_RetornaDistritos_Result> sp_RetornaDistritos(string nombre, Nullable<int> id_Canton)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_CantonParameter = id_Canton.HasValue ?
                new ObjectParameter("id_Canton", id_Canton) :
                new ObjectParameter("id_Canton", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaDistritos_Result>("sp_RetornaDistritos", nombreParameter, id_CantonParameter);
        }
    
        public virtual ObjectResult<sp_RetornaEncFactura_Result> sp_RetornaEncFactura(string estadoFactura)
        {
            var estadoFacturaParameter = estadoFactura != null ?
                new ObjectParameter("estadoFactura", estadoFactura) :
                new ObjectParameter("estadoFactura", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaEncFactura_Result>("sp_RetornaEncFactura", estadoFacturaParameter);
        }
    
        public virtual ObjectResult<sp_RetornaEncFactura_ID_Result> sp_RetornaEncFactura_ID(Nullable<int> idEfactura)
        {
            var idEfacturaParameter = idEfactura.HasValue ?
                new ObjectParameter("idEfactura", idEfactura) :
                new ObjectParameter("idEfactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaEncFactura_ID_Result>("sp_RetornaEncFactura_ID", idEfacturaParameter);
        }
    
        public virtual ObjectResult<sp_RetornaMarcaVehiculo_Result> sp_RetornaMarcaVehiculo(string codigoMarcaVehiculo, string tipoMarcaVehiculo)
        {
            var codigoMarcaVehiculoParameter = codigoMarcaVehiculo != null ?
                new ObjectParameter("CodigoMarcaVehiculo", codigoMarcaVehiculo) :
                new ObjectParameter("CodigoMarcaVehiculo", typeof(string));
    
            var tipoMarcaVehiculoParameter = tipoMarcaVehiculo != null ?
                new ObjectParameter("TipoMarcaVehiculo", tipoMarcaVehiculo) :
                new ObjectParameter("TipoMarcaVehiculo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaMarcaVehiculo_Result>("sp_RetornaMarcaVehiculo", codigoMarcaVehiculoParameter, tipoMarcaVehiculoParameter);
        }
    
        public virtual ObjectResult<sp_RetornaMarcaVehiculo_ID_Result> sp_RetornaMarcaVehiculo_ID(Nullable<int> idMarcaVehiculo)
        {
            var idMarcaVehiculoParameter = idMarcaVehiculo.HasValue ?
                new ObjectParameter("idMarcaVehiculo", idMarcaVehiculo) :
                new ObjectParameter("idMarcaVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaMarcaVehiculo_ID_Result>("sp_RetornaMarcaVehiculo_ID", idMarcaVehiculoParameter);
        }
    
        public virtual ObjectResult<sp_RetornaPaisFabricante_Result> sp_RetornaPaisFabricante(string codigoPaisFabricante, string paisFabricante)
        {
            var codigoPaisFabricanteParameter = codigoPaisFabricante != null ?
                new ObjectParameter("CodigoPaisFabricante", codigoPaisFabricante) :
                new ObjectParameter("CodigoPaisFabricante", typeof(string));
    
            var paisFabricanteParameter = paisFabricante != null ?
                new ObjectParameter("PaisFabricante", paisFabricante) :
                new ObjectParameter("PaisFabricante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaPaisFabricante_Result>("sp_RetornaPaisFabricante", codigoPaisFabricanteParameter, paisFabricanteParameter);
        }
    
        public virtual ObjectResult<sp_RetornaPaisFabricante_ID_Result> sp_RetornaPaisFabricante_ID(Nullable<int> idPaisFabricante)
        {
            var idPaisFabricanteParameter = idPaisFabricante.HasValue ?
                new ObjectParameter("idPaisFabricante", idPaisFabricante) :
                new ObjectParameter("idPaisFabricante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaPaisFabricante_ID_Result>("sp_RetornaPaisFabricante_ID", idPaisFabricanteParameter);
        }
    
        public virtual ObjectResult<sp_RetornaProvincias_Result> sp_RetornaProvincias(string nombre, Nullable<int> id_Provincia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_ProvinciaParameter = id_Provincia.HasValue ?
                new ObjectParameter("id_Provincia", id_Provincia) :
                new ObjectParameter("id_Provincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaProvincias_Result>("sp_RetornaProvincias", nombreParameter, id_ProvinciaParameter);
        }
    
        public virtual ObjectResult<sp_RetornaResidenciaCliente_Result> sp_RetornaResidenciaCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaResidenciaCliente_Result>("sp_RetornaResidenciaCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<sp_RetornaServicioOProducto_Result> sp_RetornaServicioOProducto(string codigoSOP, string tipoSOP)
        {
            var codigoSOPParameter = codigoSOP != null ?
                new ObjectParameter("CodigoSOP", codigoSOP) :
                new ObjectParameter("CodigoSOP", typeof(string));
    
            var tipoSOPParameter = tipoSOP != null ?
                new ObjectParameter("TipoSOP", tipoSOP) :
                new ObjectParameter("TipoSOP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaServicioOProducto_Result>("sp_RetornaServicioOProducto", codigoSOPParameter, tipoSOPParameter);
        }
    
        public virtual ObjectResult<sp_RetornaServiciosOProductos_ID_Result> sp_RetornaServiciosOProductos_ID(Nullable<int> idSOP)
        {
            var idSOPParameter = idSOP.HasValue ?
                new ObjectParameter("idSOP", idSOP) :
                new ObjectParameter("idSOP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaServiciosOProductos_ID_Result>("sp_RetornaServiciosOProductos_ID", idSOPParameter);
        }
    
        public virtual ObjectResult<sp_RetornaTipoVehiculo_Result> sp_RetornaTipoVehiculo(string codigoTipoVehiculo, string tipoVehiculo)
        {
            var codigoTipoVehiculoParameter = codigoTipoVehiculo != null ?
                new ObjectParameter("CodigoTipoVehiculo", codigoTipoVehiculo) :
                new ObjectParameter("CodigoTipoVehiculo", typeof(string));
    
            var tipoVehiculoParameter = tipoVehiculo != null ?
                new ObjectParameter("TipoVehiculo", tipoVehiculo) :
                new ObjectParameter("TipoVehiculo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaTipoVehiculo_Result>("sp_RetornaTipoVehiculo", codigoTipoVehiculoParameter, tipoVehiculoParameter);
        }
    
        public virtual ObjectResult<sp_RetornaTipoVehiculos_ID_Result> sp_RetornaTipoVehiculos_ID(Nullable<int> idTipoVehiculo)
        {
            var idTipoVehiculoParameter = idTipoVehiculo.HasValue ?
                new ObjectParameter("idTipoVehiculo", idTipoVehiculo) :
                new ObjectParameter("idTipoVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaTipoVehiculos_ID_Result>("sp_RetornaTipoVehiculos_ID", idTipoVehiculoParameter);
        }
    
        public virtual ObjectResult<sp_RetornaVehiculo_Result> sp_RetornaVehiculo(string placa, Nullable<int> idTipoVeh, Nullable<int> idMarcaVeh)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var idTipoVehParameter = idTipoVeh.HasValue ?
                new ObjectParameter("idTipoVeh", idTipoVeh) :
                new ObjectParameter("idTipoVeh", typeof(int));
    
            var idMarcaVehParameter = idMarcaVeh.HasValue ?
                new ObjectParameter("idMarcaVeh", idMarcaVeh) :
                new ObjectParameter("idMarcaVeh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaVehiculo_Result>("sp_RetornaVehiculo", placaParameter, idTipoVehParameter, idMarcaVehParameter);
        }
    
        public virtual ObjectResult<sp_RetornaVehiculo_ID_Result> sp_RetornaVehiculo_ID(Nullable<int> idVehiculo)
        {
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaVehiculo_ID_Result>("sp_RetornaVehiculo_ID", idVehiculoParameter);
        }
    
        public virtual ObjectResult<sp_RetornaVehiculosXCliente_Result> sp_RetornaVehiculosXCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaVehiculosXCliente_Result>("sp_RetornaVehiculosXCliente", idClienteParameter);
        }
    
        public virtual ObjectResult<sp_RetornaVehXPer_ID_Result> sp_RetornaVehXPer_ID(Nullable<int> idVehXper)
        {
            var idVehXperParameter = idVehXper.HasValue ?
                new ObjectParameter("idVehXper", idVehXper) :
                new ObjectParameter("idVehXper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaVehXPer_ID_Result>("sp_RetornaVehXPer_ID", idVehXperParameter);
        }
    
        public virtual ObjectResult<sp_RetornaVehXPers_Result> sp_RetornaVehXPers(Nullable<int> idVehXper, Nullable<int> idVehiculo)
        {
            var idVehXperParameter = idVehXper.HasValue ?
                new ObjectParameter("idVehXper", idVehXper) :
                new ObjectParameter("idVehXper", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("idVehiculo", idVehiculo) :
                new ObjectParameter("idVehiculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaVehXPers_Result>("sp_RetornaVehXPers", idVehXperParameter, idVehiculoParameter);
        }
    
        public virtual int sp_InsertaCliente(string cedula, Nullable<System.DateTime> fechaNacimiento, string genero, string nombreCompleto, string correo, Nullable<int> idProvincia, Nullable<int> idCanton, Nullable<int> idDistrito, string tipoUsuario, string contrasenia)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idProvinciaParameter = idProvincia.HasValue ?
                new ObjectParameter("idProvincia", idProvincia) :
                new ObjectParameter("idProvincia", typeof(int));
    
            var idCantonParameter = idCanton.HasValue ?
                new ObjectParameter("idCanton", idCanton) :
                new ObjectParameter("idCanton", typeof(int));
    
            var idDistritoParameter = idDistrito.HasValue ?
                new ObjectParameter("idDistrito", idDistrito) :
                new ObjectParameter("idDistrito", typeof(int));
    
            var tipoUsuarioParameter = tipoUsuario != null ?
                new ObjectParameter("TipoUsuario", tipoUsuario) :
                new ObjectParameter("TipoUsuario", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("Contrasenia", contrasenia) :
                new ObjectParameter("Contrasenia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaCliente", cedulaParameter, fechaNacimientoParameter, generoParameter, nombreCompletoParameter, correoParameter, idProvinciaParameter, idCantonParameter, idDistritoParameter, tipoUsuarioParameter, contraseniaParameter);
        }
    
        public virtual int sp_ModificaCliente(Nullable<int> idCliente, string cedula, Nullable<System.DateTime> fechaNacimiento, string genero, string nombreCompleto, string correo, Nullable<int> idProvincia, Nullable<int> idCanton, Nullable<int> idDistrito, string tipoUsuario, string contrasenia)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idProvinciaParameter = idProvincia.HasValue ?
                new ObjectParameter("idProvincia", idProvincia) :
                new ObjectParameter("idProvincia", typeof(int));
    
            var idCantonParameter = idCanton.HasValue ?
                new ObjectParameter("idCanton", idCanton) :
                new ObjectParameter("idCanton", typeof(int));
    
            var idDistritoParameter = idDistrito.HasValue ?
                new ObjectParameter("idDistrito", idDistrito) :
                new ObjectParameter("idDistrito", typeof(int));
    
            var tipoUsuarioParameter = tipoUsuario != null ?
                new ObjectParameter("TipoUsuario", tipoUsuario) :
                new ObjectParameter("TipoUsuario", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("Contrasenia", contrasenia) :
                new ObjectParameter("Contrasenia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaCliente", idClienteParameter, cedulaParameter, fechaNacimientoParameter, generoParameter, nombreCompletoParameter, correoParameter, idProvinciaParameter, idCantonParameter, idDistritoParameter, tipoUsuarioParameter, contraseniaParameter);
        }
    
        public virtual ObjectResult<sp_RetornaClientes_ID_Result> sp_RetornaClientes_ID(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaClientes_ID_Result>("sp_RetornaClientes_ID", idClienteParameter);
        }
    
        public virtual ObjectResult<sp_RetornaClientes_Result> sp_RetornaClientes(string nombreCompleto, string cedula)
        {
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetornaClientes_Result>("sp_RetornaClientes", nombreCompletoParameter, cedulaParameter);
        }
    
        public virtual int sp_InsertaMarcaVehiculo(string codigoMarcaVehiculo, string tipoMarcaVehiculo)
        {
            var codigoMarcaVehiculoParameter = codigoMarcaVehiculo != null ?
                new ObjectParameter("CodigoMarcaVehiculo", codigoMarcaVehiculo) :
                new ObjectParameter("CodigoMarcaVehiculo", typeof(string));
    
            var tipoMarcaVehiculoParameter = tipoMarcaVehiculo != null ?
                new ObjectParameter("TipoMarcaVehiculo", tipoMarcaVehiculo) :
                new ObjectParameter("TipoMarcaVehiculo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertaMarcaVehiculo", codigoMarcaVehiculoParameter, tipoMarcaVehiculoParameter);
        }
    }
}
